@charset 'UTF-8';
@use "../foundation/base" as *;
@use "../setting/color" as *;
@use "../mixin/breakpoint" as *;

//お知らせリストの基本表示
.news-container__list{
  a {
    display: block;
    text-decoration: none;
    padding: rem(20) 0 rem(10);
    border-bottom: 1px solid $color-gray-01;
    .contents-area {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      margin-bottom: rem(10);
      .news-date{
        color: $color-darkgray;
        font-weight: 700;
        margin-right: rem(12);
      }
    }
    .post-category{
      background-color: $color-darkgray;
    }
    .news-title {
      color: $color-darkgray;
      font-weight: 700;
      transition: 0.3s;
      margin-bottom: 0;
    }
  }
}

//ブログサムネイルリストの基本表示
.box-container {
  width: auto;
  height: 100%;
  a{
    color: $color-black-main;
    text-decoration: none;
    .zoomInRotate {
      .mask {
        display: block;
        line-height: 0;/*行の高さを0にする*/
        border-radius: 10px;
        overflow: hidden;/*拡大してはみ出る要素を隠す*/
        img {
          display: block;
          width: 100%;
          margin: auto;
          object-fit: cover;
          transform: scale(1);
          transition: .3s ease-in-out;/*移り変わる速さを変更したい場合はこの数値を変更*/
          &:before {
            content: '';
            display: block;
            padding-top: 100%;
          }
          &:hover {
            // transform:scale(1.2,1.2);
            // transition:1s all;
          }
          @include mq(xl) {
            width: 100%;
          }
        }
      }
    }
  }
  .contents-area {
    padding: rem(10) 0;
    .news-date{
      margin-right: rem(12);
    }
    .news-title {
      color: $color-black-main;
      font-weight: 700;
      padding-top: rem(10);
      transition: 0.3s;
    }
    &:hover {
      opacity: 1;
    }
  }
}


//記事一覧表示
.list-boxes {
  display: flex;
  flex-wrap: wrap;
  gap: rem(30) rem(25);
  @include mq(m) {
    gap: rem(30) rem(12);
  }
  .list-box {
    width: calc((100% - rem(25)) / 2);
    height: auto;
    @include mq(m) {
      width: calc((90vw - rem(12)) / 2);
    }
    @include mq(s) {
      width: 100%;
    }
    .box-container {
      .zoomInRotate {
        .mask {
          img {
            width: 100%;
            height: rem(273);
            @include mq(xl) {
              height: calc(((90vw - rem(300) - rem(40) - rem(25)) / 2) * 0.66);
            }
            @include mq(l) {
              height: calc(((90vw - rem(25)) / 2) * 0.66);
            }
            @include mq(m) {
              height: calc(((90vw - rem(12)) / 2) * 0.66);
            }
            @include mq(s) {
              height: calc(90vw * 0.66);
            }
          }
        }
      }
    }
  }
}
